{
    "swagger": "2.0",
    "host": "your.coap.server",
    "basePath": "/api",
    "info": {
        "version": "1.1",
        "title": "2IMN20 Practical API",
        "description": ""
    },
    "tags": [
        {
            "name": "Manager",
            "description": "CoAP server (runs on any computer)"
        },
        {
            "name": "ParkingSpot",
            "description": "CoAP server (runs on Pi)"
        }
    ],
    "paths": {
        "/MANAGER_IP/parking_spots": {
            "get": {
                "tags": [
                    "Manager"
                ],
                "description": "Gets `ParkingSpot` objects.\nOptional query param of **state** allows us to filter on free|reserved|occupied parking spots.\n",
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State of the returned parking spots",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "free",
                            "reserved",
                            "occupied"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "ParkingSpots",
                            "type": "array",
                            "items": {
                                "title": "ParkingSpot",
                                "$ref": "#/definitions/ParkingSpot"
                            }
                        }
                    }
                }
            }
        },
        "/MANAGER_IP/parking_spots/{parkingSpotId}": {
            "get": {
                "tags": [
                    "Manager"
                ],
                "description": "Gets a particular `ParkingSpot` object.\n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "ParkingSpot",
                            "type": "object",
                            "$ref": "#/definitions/ParkingSpot"
                        }
                    }
                }
            }
        },
        "/MANAGER_IP/parking_spots/{parkingSpotId}/reservations": {
            "get": {
                "tags": [
                    "Manager"
                ],
                "description": "Gets reservations of a particular ParkingSpot. This endpoint is here mostly for the sake of completeness, as the information is embedded in a ParkingSpot object anyway.\n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "Reservations",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reservation"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Manager"
                ],
                "description": "Create a reservation. Manager has to set the vehicleId and reservationId itself for security reasons. Although the 201/401 CoAP response header is sufficient as a response, we also return a JSON object that reflects this information (helpful for debugging).\n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "from",
                        "in": "formData",
                        "description": "Start time of reservation",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "to",
                        "in": "formData",
                        "description": "End time of reservation",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful reservation",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "409": {
                        "description": "There was a time conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/MANAGER_IP/parking_spots/{parkingSpotId}/reservations/{reservationId}": {
            "put": {
                "tags": [
                    "Manager"
                ],
                "description": "Note: This is an optional feature, not needed according to spec.\nUpdate the reservation. \n \n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "reservationId",
                        "in": "path",
                        "description": "Reservation ID",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "from",
                        "in": "formData",
                        "description": "Start time of reservation",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "to",
                        "in": "formData",
                        "description": "End time of reservation",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully changed reservation",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "409": {
                        "description": "There was a time conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Manager"
                ],
                "description": "Note: This is an optional feature, not needed according to spec.\nUpdate the reservation. \n \n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "reservationId",
                        "in": "path",
                        "description": "Reservation ID",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted reservation",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/PARKING_SPOT_IP/parking_spots/{parkingSpotId}": {
            "get": {
                "tags": [
                    "ParkingSpot"
                ],
                "description": "Gets a particular `ParkingSpot` object.\n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "ParkingSpot",
                            "type": "object",
                            "$ref": "#/definitions/ParkingSpot"
                        }
                    }
                }
            }
        },
        "/PARKING_SPOT_IP/parking_spots/{parkingSpotId}/reservations": {
            "get": {
                "tags": [
                    "ParkingSpot"
                ],
                "description": "Gets reservations of a particular ParkingSpot. This endpoint is here mostly for the sake of completeness, as the information is embedded in a ParkingSpot object anyway.\n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "title": "Reservations",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Reservation"
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ParkingSpot"
                ],
                "description": "Create a reservation. Manager has to set the vehicleId and reservationId itself for security reasons. Although the 201/401 CoAP response header is sufficient as a response, we also return a JSON object that reflects this information (helpful for debugging).\n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "from",
                        "in": "formData",
                        "description": "Start time of reservation",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "to",
                        "in": "formData",
                        "description": "End time of reservation",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful reservation",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "409": {
                        "description": "There was a time conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        },
        "/PARKING_SPOT_IP/parking_spots/{parkingSpotId}/reservations/{reservationId}": {
            "put": {
                "tags": [
                    "ParkingSpot"
                ],
                "description": "Note: This is an optional feature, not needed according to spec.\nUpdate the reservation. \n \n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "reservationId",
                        "in": "path",
                        "description": "Reservation ID",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "from",
                        "in": "formData",
                        "description": "Start time of reservation",
                        "type": "integer",
                        "required": true
                    },
                    {
                        "name": "to",
                        "in": "formData",
                        "description": "End time of reservation",
                        "type": "integer",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully changed reservation",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "409": {
                        "description": "There was a time conflict",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "ParkingSpot"
                ],
                "description": "Note: This is an optional feature, not needed according to spec.\nUpdate the reservation. \n \n",
                "parameters": [
                    {
                        "name": "parkingSpotId",
                        "in": "path",
                        "description": "ParkingSpot ID",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "reservationId",
                        "in": "path",
                        "description": "Reservation ID",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted reservation",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ParkingSpot": {
            "type": "object",
            "properties": {
                "parkingSpotId": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "enum": [
                        "free",
                        "reserved",
                        "occupied"
                    ]
                },
                "price": {
                    "type": "integer"
                },
                "reservations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Reservation"
                    }
                }
            }
        },
        "Reservation": {
            "type": "object",
            "description": "Each parking spot can have many reservations.",
            "properties": {
                "reservationId": {
                    "type": "string",
                    "description": "Id of the reservation"
                },
                "vehicleId": {
                    "type": "string",
                    "description": "Id of the vehicle that either reserved or occupies the spot. This attribute is present only if the client is \"admin\" (e.g. Visualization Service) or vehicleId is the same as the Vehicle making the query."
                },
                "from": {
                    "type": "number",
                    "description": "Start time (unix timestamp) of reservation."
                },
                "to": {
                    "type": "number",
                    "description": "Start time (unix timestamp) of reservation."
                }
            }
        },
        "Response": {
            "properties": {
                "statusCode": {
                    "type": "integer"
                },
                "statusMessage": {
                    "type": "string"
                }
            }
        }
    }
}